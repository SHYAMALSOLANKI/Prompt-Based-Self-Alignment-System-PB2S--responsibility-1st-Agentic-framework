name: PB2S Conformance & Acceptance Tests

on:
  push:
    paths:
      - 'SPECIFICATION/**'
      - 'schemas/**'
      - 'scripts/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'SPECIFICATION/**'
      - 'schemas/**'
      - 'scripts/**'
      - '.github/workflows/**'

jobs:
  conformance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn pydantic requests jsonschema

      - name: Validate SOT Sections
        run: |
          SPEC="SPECIFICATION/SPEC-2_Total_Attention_EdgeAI_v0.2.1.1_RELEASE.md"
          SCHEMA_A="schemas/pb2s_proof.v2.schema.json"
          SCHEMA_B="schemas/pb2s_proof.schema.json"
          if [ -f "$SCHEMA_A" ]; then SCHEMA="$SCHEMA_A"; else SCHEMA="$SCHEMA_B"; fi
          python scripts/sot_verify.py --spec "$SPEC" --sections 2..10 --schema "$SCHEMA"

      - name: Start ephemeral PB2S Planner (mock)
        run: |
          python - <<'PY' &
          from fastapi import FastAPI
          from pydantic import BaseModel
          import uvicorn
          app = FastAPI(title="PB2S CI Mock")
          class ChatRequest(BaseModel):
              context: dict | None = None
              facts: list[str] = []
              policy: dict = {}
          @app.post("/chat")
          def chat(_req: ChatRequest):
              return {
                "text":"mock",
                "pb2s_proof":{
                  "decision":"APPROVE","cycles":0,"audit_ref":"ci-run",
                  "model_sha":"sha256:x","policy_sha":"sha256:y","attention_state":"FAIR",
                  "cr_event":{"old":"","new":""},"bus_msg_id":"uuid",
                  "sampler":{"seed":123456,"temperature":0.2,"top_p":0.9,"top_k":50},
                  "timings":{"draft_ms":1,"reflect_ms":1,"revise_ms":1,"total_ms":3}
                }
              }
          uvicorn.run(app, host="0.0.0.0", port=8000)
          PY
          for i in {1..60}; do curl -fsS http://127.0.0.1:8000/openapi.json && break; sleep 1; done

      - name: Run Core Conformance Test
        run: python scripts/conformance.py --endpoint http://127.0.0.1:8000/chat

      - name: Run Acceptance Test Bundle (optional)
        run: |
          [ -f scripts/at_bus.py ] && python scripts/at_bus.py || true
          [ -f scripts/at_determinism.py ] && python scripts/at_determinism.py || true
          [ -f scripts/at_clarify.py ] && python scripts/at_clarify.py || true
          [ -f scripts/at_proof_to_action.py ] && python scripts/at_proof_to_action.py || true
          [ -f scripts/at_retention.py ] && python scripts/at_retention.py || true

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pb2s_evidence
          path: docs/challenges/*.json
